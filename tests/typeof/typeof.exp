typeof.js:43
 43: var b: MyClass1 = MyClass1;
                       ^^^^^^^^ class type: MyClass1. This type is incompatible with
 43: var b: MyClass1 = MyClass1;
            ^^^^^^^^ MyClass1

typeof.js:53
 53: var c: typeof MyClass2 = new MyClass2();
                              ^^^^^^^^^^^^^^ MyClass2. This type is incompatible with
 53: var c: typeof MyClass2 = new MyClass2();
            ^^^^^^^^^^^^^^^ class type: MyClass2

typeof.js:61
 61: var e: typeof numValue = 'asdf'; // Error: string ~> number
                              ^^^^^^ string. This type is incompatible with
 61: var e: typeof numValue = 'asdf'; // Error: string ~> number
            ^^^^^^^^^^^^^^^ number

typeof.js:73
 73: var f: typeof numberAlias = 42; // Error: 'typeof <<type-alias>>' makes no sense...
                   ^^^^^^^^^^^ numberAlias. type referenced from value position
 67: type numberAlias = number;
          ^^^^^^^^^^^ type numberAlias

typeof.js:82
 82:  var keys: $Keys<Map> = "A";  // Error: ineligible value used in type anno
                      ^^^ object literal. Ineligible value used in/as type annotation (did you forget 'typeof'?)
 82:  var keys: $Keys<Map> = "A";  // Error: ineligible value used in type anno
                      ^^^ Map


Found 5 errors
